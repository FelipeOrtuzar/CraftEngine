<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.9.2" xml:lang="en-US">
  <compounddef id="structgomaengine_1_1_vector" kind="struct" language="C++" prot="public">
    <compoundname>gomaengine::Vector</compoundname>
    <includes refid="_utils_8h" local="no">Utils.h</includes>
      <sectiondef kind="public-attrib">
      <memberdef kind="variable" id="structgomaengine_1_1_vector_1ae36a8dc0833e75ec7ab72b9441ff9b93" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float gomaengine::Vector::x</definition>
        <argsstring></argsstring>
        <name>x</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
<para>Float x, usualmente visto como ancho (izquierda hacia derecha) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/gomaengine/Utils.h" line="17" column="15" bodyfile="source/gomaengine/Utils.h" bodystart="17" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="structgomaengine_1_1_vector_1af8ca15f3b5d5ded5ff6238b5e1235a05" prot="public" static="no" mutable="no">
        <type>float</type>
        <definition>float gomaengine::Vector::y</definition>
        <argsstring></argsstring>
        <name>y</name>
        <initializer>= 0.0</initializer>
        <briefdescription>
<para>Float y, usualmente visto como altura (arriba hacia abajo) </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/gomaengine/Utils.h" line="22" column="15" bodyfile="source/gomaengine/Utils.h" bodystart="22" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-func">
      <memberdef kind="function" id="structgomaengine_1_1_vector_1ab15a609444f098a262c06f450f01f40c" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>sf::Vector2f</type>
        <definition>sf::Vector2f gomaengine::Vector::to_sfVector</definition>
        <argsstring>()</argsstring>
        <name>to_sfVector</name>
        <briefdescription>
<para>Funcion que transforma el vector a un vector de la libreria SFML </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>sf::Vector como las propiedades del vector</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/gomaengine/Utils.h" line="28" column="22" bodyfile="source/gomaengine/Utils.h" bodystart="28" bodyend="28"/>
      </memberdef>
      <memberdef kind="function" id="structgomaengine_1_1_vector_1a100ddaaf3d3b3ea580f643636a4a7c38" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structgomaengine_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector gomaengine::Vector::sum</definition>
        <argsstring>(Vector _vector)</argsstring>
        <name>sum</name>
        <param>
          <type><ref refid="structgomaengine_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>_vector</declname>
        </param>
        <briefdescription>
<para>Sum between this vector and another </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_vector</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structgomaengine_1_1_vector" kindref="compound">Vector</ref> that will be summed to this one</para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/gomaengine/Utils.h" line="34" column="16" bodyfile="source/gomaengine/Utils.h" bodystart="34" bodyend="34"/>
      </memberdef>
      <memberdef kind="function" id="structgomaengine_1_1_vector_1aa9e6d516b153e626e33a2b7e8ef98fb4" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structgomaengine_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector gomaengine::Vector::substract</definition>
        <argsstring>(Vector _vector)</argsstring>
        <name>substract</name>
        <param>
          <type><ref refid="structgomaengine_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>_vector</declname>
        </param>
        <briefdescription>
<para>Funcion que resta su vector otro vector </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_vector</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structgomaengine_1_1_vector" kindref="compound">Vector</ref> que restara a si mismo</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>A si mismo</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/gomaengine/Utils.h" line="41" column="16" bodyfile="source/gomaengine/Utils.h" bodystart="41" bodyend="41"/>
      </memberdef>
      <memberdef kind="function" id="structgomaengine_1_1_vector_1a2a4c0ab30da893ce962b8dd8a78674e0" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structgomaengine_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector gomaengine::Vector::subs</definition>
        <argsstring>(Vector _vector)</argsstring>
        <name>subs</name>
        <param>
          <type><ref refid="structgomaengine_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>_vector</declname>
        </param>
        <briefdescription>
<para>Funcion que devuelve el valor de restarse a si mismo con otro vector </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_vector</parametername>
</parameternamelist>
<parameterdescription>
<para>Un vector</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Resultado de la resta vectorial</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/gomaengine/Utils.h" line="48" column="16" bodyfile="source/gomaengine/Utils.h" bodystart="48" bodyend="48"/>
      </memberdef>
      <memberdef kind="function" id="structgomaengine_1_1_vector_1a6b58c989725993a7c1fabb5714a5beff" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structgomaengine_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector gomaengine::Vector::normalize</definition>
        <argsstring>()</argsstring>
        <name>normalize</name>
        <briefdescription>
<para>Funcion que calcula el vector unitario de si mismo </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="structgomaengine_1_1_vector" kindref="compound">Vector</ref> unitario</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/gomaengine/Utils.h" line="54" column="16" bodyfile="source/gomaengine/Utils.h" bodystart="54" bodyend="57"/>
      </memberdef>
      <memberdef kind="function" id="structgomaengine_1_1_vector_1ad477270cac80be776c49e2e8ac1c01b9" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structgomaengine_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector gomaengine::Vector::multiply</definition>
        <argsstring>(float k)</argsstring>
        <name>multiply</name>
        <param>
          <type>float</type>
          <declname>k</declname>
        </param>
        <briefdescription>
<para>Funcion que multiplica el <ref refid="structgomaengine_1_1_vector" kindref="compound">Vector</ref> por una constante y lo devuelve. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>k</parametername>
</parameternamelist>
<parameterdescription>
<para>Constante a multiplicar</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structgomaengine_1_1_vector" kindref="compound">Vector</ref> (this)</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/gomaengine/Utils.h" line="78" column="16" bodyfile="source/gomaengine/Utils.h" bodystart="78" bodyend="78"/>
      </memberdef>
      <memberdef kind="function" id="structgomaengine_1_1_vector_1a418a8e07ad05840a3bdd0d50250573a3" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structgomaengine_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector gomaengine::Vector::multiply</definition>
        <argsstring>(Vector _vector)</argsstring>
        <name>multiply</name>
        <param>
          <type><ref refid="structgomaengine_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>_vector</declname>
        </param>
        <briefdescription>
<para>Funcion que multiplica el <ref refid="structgomaengine_1_1_vector" kindref="compound">Vector</ref> por otro, punto a punto, y lo devuelve. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_vector</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structgomaengine_1_1_vector" kindref="compound">Vector</ref> a multiplicar punto a punto</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para><ref refid="structgomaengine_1_1_vector" kindref="compound">Vector</ref> (this)</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/gomaengine/Utils.h" line="85" column="16" bodyfile="source/gomaengine/Utils.h" bodystart="85" bodyend="85"/>
      </memberdef>
      <memberdef kind="function" id="structgomaengine_1_1_vector_1a5ceadf12bf1e8892db9c0db7950dc6aa" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structgomaengine_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>Vector gomaengine::Vector::abs</definition>
        <argsstring>()</argsstring>
        <name>abs</name>
        <briefdescription>
<para>Funcion que aplica el valor absoluto sobre todas la dimensiones del <ref refid="structgomaengine_1_1_vector" kindref="compound">Vector</ref> </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para><ref refid="structgomaengine_1_1_vector" kindref="compound">Vector</ref> (this)</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/gomaengine/Utils.h" line="91" column="16" bodyfile="source/gomaengine/Utils.h" bodystart="91" bodyend="91"/>
      </memberdef>
      <memberdef kind="function" id="structgomaengine_1_1_vector_1a3b014ba4c29d9829f52814b58aa45ad8" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>float gomaengine::Vector::magnitude</definition>
        <argsstring>()</argsstring>
        <name>magnitude</name>
        <briefdescription>
<para>Funcion que calcula la magnitud de su vector </para>
        </briefdescription>
        <detaileddescription>
<para><simplesect kind="return"><para>Magnitud del vector</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/gomaengine/Utils.h" line="110" column="15" bodyfile="source/gomaengine/Utils.h" bodystart="110" bodyend="112"/>
      </memberdef>
      <memberdef kind="function" id="structgomaengine_1_1_vector_1a911a366df0e2734acdb8de3004f5fc9e" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>void</type>
        <definition>void gomaengine::Vector::print</definition>
        <argsstring>()</argsstring>
        <name>print</name>
        <briefdescription>
<para>Funcion que muestra en pantalla al vector </para>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/gomaengine/Utils.h" line="117" column="14" bodyfile="source/gomaengine/Utils.h" bodystart="117" bodyend="119"/>
      </memberdef>
      <memberdef kind="function" id="structgomaengine_1_1_vector_1aa16726f3686eabf290ca6267ad8145bc" prot="public" static="no" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>bool</type>
        <definition>bool gomaengine::Vector::eq</definition>
        <argsstring>(Vector _vector)</argsstring>
        <name>eq</name>
        <param>
          <type><ref refid="structgomaengine_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>_vector</declname>
        </param>
        <briefdescription>
<para>Funcion que calcula la igualdad vectorial entre dos vectores </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_vector</parametername>
</parameternamelist>
<parameterdescription>
<para><ref refid="structgomaengine_1_1_vector" kindref="compound">Vector</ref></para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Booleano referente a si los dos vectores son iguales en valor</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/gomaengine/Utils.h" line="126" column="14" bodyfile="source/gomaengine/Utils.h" bodystart="126" bodyend="128"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="public-static-func">
      <memberdef kind="function" id="structgomaengine_1_1_vector_1a0a989b1573c271183efffbe203a70c80" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structgomaengine_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>static Vector gomaengine::Vector::to_Vector</definition>
        <argsstring>(sf::Vector2f _sf_vector)</argsstring>
        <name>to_Vector</name>
        <param>
          <type>sf::Vector2f</type>
          <declname>_sf_vector</declname>
        </param>
        <briefdescription>
<para>Static function to generate a <ref refid="structgomaengine_1_1_vector" kindref="compound">Vector</ref> from a sf::Vector2f </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_sf_vector</parametername>
</parameternamelist>
<parameterdescription>
<para>The original sf::Vector2f</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The output <ref refid="structgomaengine_1_1_vector" kindref="compound">Vector</ref></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/gomaengine/Utils.h" line="64" column="23" bodyfile="source/gomaengine/Utils.h" bodystart="64" bodyend="64"/>
      </memberdef>
      <memberdef kind="function" id="structgomaengine_1_1_vector_1afc775afc2a7edff11ec13998b14eb533" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type><ref refid="structgomaengine_1_1_vector" kindref="compound">Vector</ref></type>
        <definition>static Vector gomaengine::Vector::to_Vector</definition>
        <argsstring>(sf::Vector2i _sf_vector)</argsstring>
        <name>to_Vector</name>
        <param>
          <type>sf::Vector2i</type>
          <declname>_sf_vector</declname>
        </param>
        <briefdescription>
<para>Static function to generate a <ref refid="structgomaengine_1_1_vector" kindref="compound">Vector</ref> from a sf::Vector2i </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_sf_vector</parametername>
</parameternamelist>
<parameterdescription>
<para>The original sf::Vector2i</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>The output <ref refid="structgomaengine_1_1_vector" kindref="compound">Vector</ref></para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/gomaengine/Utils.h" line="71" column="23" bodyfile="source/gomaengine/Utils.h" bodystart="71" bodyend="71"/>
      </memberdef>
      <memberdef kind="function" id="structgomaengine_1_1_vector_1a42bde5df1aa513349980ee4f9b72cc30" prot="public" static="yes" const="no" explicit="no" inline="yes" virt="non-virtual">
        <type>float</type>
        <definition>static float gomaengine::Vector::distance</definition>
        <argsstring>(Vector _vector1, Vector _vector2)</argsstring>
        <name>distance</name>
        <param>
          <type><ref refid="structgomaengine_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>_vector1</declname>
        </param>
        <param>
          <type><ref refid="structgomaengine_1_1_vector" kindref="compound">Vector</ref></type>
          <declname>_vector2</declname>
        </param>
        <briefdescription>
<para>Funcion que calcula la distancia euclidiana entre dos vectores </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>_vector1</parametername>
</parameternamelist>
<parameterdescription>
<para>Primer vector</para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>_vector2</parametername>
</parameternamelist>
<parameterdescription>
<para>Segundo vector</para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Un float de la distancia entre ambos vectores</para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="source/gomaengine/Utils.h" line="99" column="22" bodyfile="source/gomaengine/Utils.h" bodystart="99" bodyend="104"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Estructura de un vector en 2D (x, y) </para>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <location file="source/gomaengine/Utils.h" line="12" column="5" bodyfile="source/gomaengine/Utils.h" bodystart="12" bodyend="129"/>
    <listofallmembers>
      <member refid="structgomaengine_1_1_vector_1a5ceadf12bf1e8892db9c0db7950dc6aa" prot="public" virt="non-virtual"><scope>gomaengine::Vector</scope><name>abs</name></member>
      <member refid="structgomaengine_1_1_vector_1a42bde5df1aa513349980ee4f9b72cc30" prot="public" virt="non-virtual"><scope>gomaengine::Vector</scope><name>distance</name></member>
      <member refid="structgomaengine_1_1_vector_1aa16726f3686eabf290ca6267ad8145bc" prot="public" virt="non-virtual"><scope>gomaengine::Vector</scope><name>eq</name></member>
      <member refid="structgomaengine_1_1_vector_1a3b014ba4c29d9829f52814b58aa45ad8" prot="public" virt="non-virtual"><scope>gomaengine::Vector</scope><name>magnitude</name></member>
      <member refid="structgomaengine_1_1_vector_1ad477270cac80be776c49e2e8ac1c01b9" prot="public" virt="non-virtual"><scope>gomaengine::Vector</scope><name>multiply</name></member>
      <member refid="structgomaengine_1_1_vector_1a418a8e07ad05840a3bdd0d50250573a3" prot="public" virt="non-virtual"><scope>gomaengine::Vector</scope><name>multiply</name></member>
      <member refid="structgomaengine_1_1_vector_1a6b58c989725993a7c1fabb5714a5beff" prot="public" virt="non-virtual"><scope>gomaengine::Vector</scope><name>normalize</name></member>
      <member refid="structgomaengine_1_1_vector_1a911a366df0e2734acdb8de3004f5fc9e" prot="public" virt="non-virtual"><scope>gomaengine::Vector</scope><name>print</name></member>
      <member refid="structgomaengine_1_1_vector_1a2a4c0ab30da893ce962b8dd8a78674e0" prot="public" virt="non-virtual"><scope>gomaengine::Vector</scope><name>subs</name></member>
      <member refid="structgomaengine_1_1_vector_1aa9e6d516b153e626e33a2b7e8ef98fb4" prot="public" virt="non-virtual"><scope>gomaengine::Vector</scope><name>substract</name></member>
      <member refid="structgomaengine_1_1_vector_1a100ddaaf3d3b3ea580f643636a4a7c38" prot="public" virt="non-virtual"><scope>gomaengine::Vector</scope><name>sum</name></member>
      <member refid="structgomaengine_1_1_vector_1ab15a609444f098a262c06f450f01f40c" prot="public" virt="non-virtual"><scope>gomaengine::Vector</scope><name>to_sfVector</name></member>
      <member refid="structgomaengine_1_1_vector_1a0a989b1573c271183efffbe203a70c80" prot="public" virt="non-virtual"><scope>gomaengine::Vector</scope><name>to_Vector</name></member>
      <member refid="structgomaengine_1_1_vector_1afc775afc2a7edff11ec13998b14eb533" prot="public" virt="non-virtual"><scope>gomaengine::Vector</scope><name>to_Vector</name></member>
      <member refid="structgomaengine_1_1_vector_1ae36a8dc0833e75ec7ab72b9441ff9b93" prot="public" virt="non-virtual"><scope>gomaengine::Vector</scope><name>x</name></member>
      <member refid="structgomaengine_1_1_vector_1af8ca15f3b5d5ded5ff6238b5e1235a05" prot="public" virt="non-virtual"><scope>gomaengine::Vector</scope><name>y</name></member>
    </listofallmembers>
  </compounddef>
</doxygen>
